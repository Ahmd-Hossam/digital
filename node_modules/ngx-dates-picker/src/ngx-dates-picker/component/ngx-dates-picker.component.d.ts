import { OnInit, OnChanges, SimpleChanges, ElementRef, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ISlimScrollOptions } from 'ngx-slimscroll';
import { DateRange, Day } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare type AddClass = string | string[] | {
    [k: string]: boolean;
} | null;
export interface DatepickerOptions {
    closeOnClickOutside?: boolean;
    closeOnSelection?: boolean;
    includeDays?: 'none' | 'previous-month' | 'next-month' | 'all';
    includeNextMonthsFirstFullWeek?: boolean;
    minYear?: number;
    maxYear?: number;
    displayFormat?: string;
    barTitleFormat?: string;
    dayNamesFormat?: string;
    barTitleIfEmpty?: string;
    selectRange?: boolean;
    rangeSeparator?: string;
    firstCalendarDay?: number;
    locale?: object;
    minDate?: Date;
    maxDate?: Date;
    /** Placeholder for the input field */
    placeholder?: string;
    /** [ngClass] to add to the input field */
    addClass?: AddClass;
    /** [ngStyle] to add to the input field */
    addStyle?: {
        [k: string]: any;
    } | null;
    /** ID to assign to the input field */
    fieldId?: string;
    /** If false, barTitleIfEmpty will be disregarded and a date will always be shown. Default: true */
    useEmptyBarTitle?: boolean;
}
export declare type PickerPosition = 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right' | 'static';
export declare class NgxDatesPickerComponent implements ControlValueAccessor, OnInit, OnChanges {
    calendarContainerElement: ElementRef;
    inputElement: ElementRef;
    options: DatepickerOptions;
    /**
     * Disable datepicker's input
     */
    headless: boolean;
    /**
     * Set datepicker's visibility state
     */
    isOpened: boolean;
    /**
     * Datepicker dropdown position
     */
    position: PickerPosition;
    previousMonthButtonTemplate: TemplateRef<any>;
    nextMonthButtonTemplate: TemplateRef<any>;
    currentOptions: DatepickerOptions;
    displayValue: string;
    viewingDate: Date;
    barTitle: string;
    view: 'days' | 'months' | 'years';
    years: {
        year: number;
        isThisYear: boolean;
    }[];
    months: {
        month: number;
        name: string;
        isSelected: boolean;
    }[];
    dayNames: string[];
    scrollOptions: ISlimScrollOptions;
    days: Day[];
    fieldId: string;
    disabled: boolean;
    private _range;
    private onTouchedCallback;
    private onChangeCallback;
    setDisabledState(isDisabled: boolean): void;
    set range(val: DateRange | undefined);
    get range(): DateRange | undefined;
    constructor();
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    get defaultFieldId(): string;
    updateOptions(options: DatepickerOptions): void;
    nextMonth(): void;
    prevMonth(): void;
    setDate(i: number): void;
    setYear(i: number): void;
    setMonth(i: number): void;
    init(): void;
    initYears(): void;
    initMonths(): void;
    initDayNames(): void;
    toggleView(): void;
    toggle(): void;
    close(): void;
    reset(): void;
    writeValue(val: DateRange | Date | string | undefined): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onBlur(e: MouseEvent): void;
    formatDay: (date: Date, isVisible?: boolean) => Day;
    getDayClasses(day: Day): AddClass;
    /**
     * Checks if specified date is in range of min and max dates
     * @param date
     */
    private isDateSelectable;
    private isDateSelected;
    private isInRange;
    private formatDisplay;
    private isRangeBoundary;
    private getValueToEmit;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxDatesPickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxDatesPickerComponent, "ngx-dates-picker", never, { "headless": "headless"; "isOpened": "isOpened"; "position": "position"; "options": "options"; "previousMonthButtonTemplate": "previousMonthButtonTemplate"; "nextMonthButtonTemplate": "nextMonthButtonTemplate"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=ngx-dates-picker.component.d.ts.map