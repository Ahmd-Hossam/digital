{"version":3,"file":"ngx-tags-input-box.js","sources":["ngx-tags-input-box/lib/ngx-tags.service.ts","ngx-tags-input-box/lib/ngx-tags.component.ts","ngx-tags-input-box/lib/tags/tags.component.ts","ngx-tags-input-box/lib/ngx-tags.module.ts","ngx-tags-input-box/public-api.ts","ngx-tags-input-box/ngx-tags-input-box.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTagsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tags',\n  template: `\n    <p>\n      ngx-tags works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxTagsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tags-input',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss'],\n})\nexport class TagsComponent implements OnInit {\n  constructor() {}\n  @Output() tagsChange = new EventEmitter();\n  @Input() limit: number;\n  @Input() mode: string;\n  @Input() placeholder: string;\n  @Input() header: string;\n\n  tags = [];\n\n  ngOnInit(): void {\n    this.limit = this.limit || 5;\n    this.placeholder = this.placeholder || 'Add tags';\n    this.header = this.header || 'Tags';\n\n    if (this.mode === 'success') {\n      this.mode = 'green';\n    } else if (this.mode === 'primary') {\n      this.mode = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.mode = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.mode = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.mode = 'cornflowerblue';\n    } else {\n      this.mode = 'cornflowerblue';\n    }\n  }\n  add(e) {\n    if (this.tags.length < this.limit - 1) {\n      this.tags.push(e.target.value);\n    } else {\n      this.tags[this.limit - 1] = e.target.value;\n    }\n    e.target.value = '';\n    this.tagsChange.emit(this.tags);\n  }\n\n  remove(i) {\n    this.tags.splice(i, 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxTagsComponent } from './ngx-tags.component';\nimport { TagsComponent } from './tags/tags.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgxTagsComponent, TagsComponent],\n  imports: [CommonModule],\n  exports: [NgxTagsComponent, TagsComponent],\n})\nexport class NgxTagsModule {}\n","/*\n * Public API Surface of ngx-tags\n */\n\nexport * from './lib/ngx-tags.service';\nexport * from './lib/ngx-tags.component';\nexport * from './lib/ngx-tags.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {TagsComponent as Éµa} from './lib/tags/tags.component';"]}