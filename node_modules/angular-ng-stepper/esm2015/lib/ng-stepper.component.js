var NgStepperComponent_1;
import { __decorate } from "tslib";
import { Component, HostListener } from '@angular/core';
import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';
import { animate, state, style, transition, trigger } from '@angular/animations';
const ɵ0 = { displayDefaultIndicatorType: false };
let NgStepperComponent = NgStepperComponent_1 = class NgStepperComponent extends CdkStepper {
    ngOnInit() {
    }
    handleKeyboardEvent(event) {
        if (event.key === 'ArrowLeft') {
            this.previous();
        }
        else if (event.key === 'ArrowRight') {
            this.next();
        }
    }
};
__decorate([
    HostListener('document:keydown', ['$event'])
], NgStepperComponent.prototype, "handleKeyboardEvent", null);
NgStepperComponent = NgStepperComponent_1 = __decorate([
    Component({
        selector: 'ng-stepper',
        template: "<div class=\"stepper\">\n  <div class=\"stepper-header\">\n    <ol class=\"steps\">\n      <ng-container *ngFor=\"let step of steps; let i = index;\">\n        <li class=\"step\" (click)=\"selectedIndex = i\"\n            [ngClass]=\"{\n                active: selectedIndex === i,\n                completed: step.completed && i < selectedIndex,\n                done: step.state === 'done' && i === selectedIndex\n                }\">\n          <ng-container [ngTemplateOutlet]=\"step.stepLabel.template\">\n            <ng-content select=\".step-bullet\"></ng-content>\n            <ng-content select=\".step-title\"></ng-content>\n          </ng-container>\n        </li>\n      </ng-container>\n    </ol>\n  </div>\n  <div class=\"stepper-body\">\n    <div class=\"content\"\n         *ngFor=\"let step of _steps; let i = index\"\n         [class.active]=\"selectedIndex === i\"\n         [@stepTransition]=\"_getAnimationDirection(i)\">\n      <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n    </div>\n  </div>\n</div>\n\n",
        providers: [{ provide: CdkStepper, useExisting: NgStepperComponent_1 }, {
                provide: STEPPER_GLOBAL_OPTIONS, useValue: ɵ0
            }],
        animations: [trigger('stepTransition', [
                state('previous', style({ transform: 'translateX(-100%)', opacity: 0 })),
                state('current', style({ transform: 'translateX(0)', opacity: 1 })),
                state('next', style({ transform: 'translateX(100%)', opacity: 0 })),
                transition(':enter', animate(0)),
                transition('previous => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                transition('next => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
            ])],
        styles: [":host{display:block;overflow:hidden}.stepper-header .steps{width:100%;list-style:none;display:inline-flex;align-items:center;margin:0 auto}.stepper-header .steps .step{text-align:center;font-size:1em}.stepper-header .steps ::ng-deep .step .step-bullet{position:relative;display:inline-flex;justify-content:center;align-items:center;height:40px;width:40px;background-color:#b3babe;border-radius:50%;color:#fff;font-size:1.3rem;text-align:center;text-decoration:none;cursor:pointer}.stepper-header .steps ::ng-deep .step .step-title{position:absolute;right:0;bottom:-5px;left:0;margin:auto 0;height:0}.stepper-header .steps ::ng-deep .step.active .step-bullet{background-color:#306bff}.stepper-header .steps ::ng-deep .step.completed .step-bullet{background-color:#32e67f}.stepper-header .steps ::ng-deep .step.done .step-bullet{background-color:#32e67f}.stepper-body{margin:25px auto;padding:1rem}.stepper-body .content:not(.active){height:0;overflow:hidden}.step{position:relative;width:33.33%}.step:after{content:\"\";position:absolute;width:100%;height:3px;background-color:#b3babe;top:50%;left:-50%;z-index:-1}.step:first-child:after{content:none}.step.completed+.step:after{background-color:#32e67f}"]
    })
], NgStepperComponent);
export { NgStepperComponent };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLW5nLXN0ZXBwZXIvIiwic291cmNlcyI6WyJsaWIvbmctc3RlcHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUMsVUFBVSxFQUFFLHNCQUFzQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDeEUsT0FBTyxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztXQU9oQyxFQUFDLDJCQUEyQixFQUFFLEtBQUssRUFBQztBQVduRixJQUFhLGtCQUFrQiwwQkFBL0IsTUFBYSxrQkFBbUIsU0FBUSxVQUFVO0lBQ2hELFFBQVE7SUFDUixDQUFDO0lBR0QsbUJBQW1CLENBQUMsS0FBb0I7UUFDdEMsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLFdBQVcsRUFBRTtZQUM3QixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7YUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLEtBQUssWUFBWSxFQUFFO1lBQ3JDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNiO0lBQ0gsQ0FBQztDQUNGLENBQUE7QUFQQztJQURDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDOzZEQU81QztBQVhVLGtCQUFrQjtJQWhCOUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFlBQVk7UUFDdEIsc2lDQUEwQztRQUUxQyxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLG9CQUFrQixFQUFDLEVBQUU7Z0JBQ2xFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxRQUFRLElBQXNDO2FBQ2hGLENBQUM7UUFDRixVQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQ3JDLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLG1CQUFtQixFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO2dCQUN0RSxLQUFLLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7Z0JBQ2pFLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLGtCQUFrQixFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO2dCQUNqRSxVQUFVLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO2dCQUNsRixVQUFVLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7YUFDL0UsQ0FBQyxDQUFDOztLQUNKLENBQUM7R0FDVyxrQkFBa0IsQ0FZOUI7U0FaWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSG9zdExpc3RlbmVyLCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDZGtTdGVwcGVyLCBTVEVQUEVSX0dMT0JBTF9PUFRJT05TfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQge2FuaW1hdGUsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlcn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nLXN0ZXBwZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vbmctc3RlcHBlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25nLXN0ZXBwZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IENka1N0ZXBwZXIsIHVzZUV4aXN0aW5nOiBOZ1N0ZXBwZXJDb21wb25lbnR9LCB7XG4gICAgcHJvdmlkZTogU1RFUFBFUl9HTE9CQUxfT1BUSU9OUywgdXNlVmFsdWU6IHtkaXNwbGF5RGVmYXVsdEluZGljYXRvclR5cGU6IGZhbHNlfVxuICB9XSxcbiAgYW5pbWF0aW9uczogW3RyaWdnZXIoJ3N0ZXBUcmFuc2l0aW9uJywgW1xuICAgIHN0YXRlKCdwcmV2aW91cycsIHN0eWxlKHt0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMDAlKScsIG9wYWNpdHk6IDB9KSksXG4gICAgc3RhdGUoJ2N1cnJlbnQnLCBzdHlsZSh7dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwKScsIG9wYWNpdHk6IDF9KSksXG4gICAgc3RhdGUoJ25leHQnLCBzdHlsZSh7dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgxMDAlKScsIG9wYWNpdHk6IDB9KSksXG4gICAgdHJhbnNpdGlvbignOmVudGVyJywgYW5pbWF0ZSgwKSksXG4gICAgdHJhbnNpdGlvbigncHJldmlvdXMgPT4gY3VycmVudCcsIGFuaW1hdGUoJzUwMG1zIGN1YmljLWJlemllcigwLjM1LCAwLCAwLjI1LCAxKScpKSxcbiAgICB0cmFuc2l0aW9uKCduZXh0ID0+IGN1cnJlbnQnLCBhbmltYXRlKCc1MDBtcyBjdWJpYy1iZXppZXIoMC4zNSwgMCwgMC4yNSwgMSknKSksXG4gIF0pXVxufSlcbmV4cG9ydCBjbGFzcyBOZ1N0ZXBwZXJDb21wb25lbnQgZXh0ZW5kcyBDZGtTdGVwcGVyIGltcGxlbWVudHMgT25Jbml0IHtcbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXlkb3duJywgWyckZXZlbnQnXSlcbiAgaGFuZGxlS2V5Ym9hcmRFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQge1xuICAgIGlmIChldmVudC5rZXkgPT09ICdBcnJvd0xlZnQnKSB7XG4gICAgICB0aGlzLnByZXZpb3VzKCk7XG4gICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT09ICdBcnJvd1JpZ2h0Jykge1xuICAgICAgdGhpcy5uZXh0KCk7XG4gICAgfVxuICB9XG59XG4iXX0=