import { __decorate, __extends } from "tslib";
import { Component, HostListener } from '@angular/core';
import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';
import { animate, state, style, transition, trigger } from '@angular/animations';
var ɵ0 = { displayDefaultIndicatorType: false };
var NgStepperComponent = /** @class */ (function (_super) {
    __extends(NgStepperComponent, _super);
    function NgStepperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NgStepperComponent_1 = NgStepperComponent;
    NgStepperComponent.prototype.ngOnInit = function () {
    };
    NgStepperComponent.prototype.handleKeyboardEvent = function (event) {
        if (event.key === 'ArrowLeft') {
            this.previous();
        }
        else if (event.key === 'ArrowRight') {
            this.next();
        }
    };
    var NgStepperComponent_1;
    __decorate([
        HostListener('document:keydown', ['$event'])
    ], NgStepperComponent.prototype, "handleKeyboardEvent", null);
    NgStepperComponent = NgStepperComponent_1 = __decorate([
        Component({
            selector: 'ng-stepper',
            template: "<div class=\"stepper\">\n  <div class=\"stepper-header\">\n    <ol class=\"steps\">\n      <ng-container *ngFor=\"let step of steps; let i = index;\">\n        <li class=\"step\" (click)=\"selectedIndex = i\"\n            [ngClass]=\"{\n                active: selectedIndex === i,\n                completed: step.completed && i < selectedIndex,\n                done: step.state === 'done' && i === selectedIndex\n                }\">\n          <ng-container [ngTemplateOutlet]=\"step.stepLabel.template\">\n            <ng-content select=\".step-bullet\"></ng-content>\n            <ng-content select=\".step-title\"></ng-content>\n          </ng-container>\n        </li>\n      </ng-container>\n    </ol>\n  </div>\n  <div class=\"stepper-body\">\n    <div class=\"content\"\n         *ngFor=\"let step of _steps; let i = index\"\n         [class.active]=\"selectedIndex === i\"\n         [@stepTransition]=\"_getAnimationDirection(i)\">\n      <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n    </div>\n  </div>\n</div>\n\n",
            providers: [{ provide: CdkStepper, useExisting: NgStepperComponent_1 }, {
                    provide: STEPPER_GLOBAL_OPTIONS, useValue: ɵ0
                }],
            animations: [trigger('stepTransition', [
                    state('previous', style({ transform: 'translateX(-100%)', opacity: 0 })),
                    state('current', style({ transform: 'translateX(0)', opacity: 1 })),
                    state('next', style({ transform: 'translateX(100%)', opacity: 0 })),
                    transition(':enter', animate(0)),
                    transition('previous => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                    transition('next => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                ])],
            styles: [":host{display:block;overflow:hidden}.stepper-header .steps{width:100%;list-style:none;display:inline-flex;align-items:center;margin:0 auto}.stepper-header .steps .step{text-align:center;font-size:1em}.stepper-header .steps ::ng-deep .step .step-bullet{position:relative;display:inline-flex;justify-content:center;align-items:center;height:40px;width:40px;background-color:#b3babe;border-radius:50%;color:#fff;font-size:1.3rem;text-align:center;text-decoration:none;cursor:pointer}.stepper-header .steps ::ng-deep .step .step-title{position:absolute;right:0;bottom:-5px;left:0;margin:auto 0;height:0}.stepper-header .steps ::ng-deep .step.active .step-bullet{background-color:#306bff}.stepper-header .steps ::ng-deep .step.completed .step-bullet{background-color:#32e67f}.stepper-header .steps ::ng-deep .step.done .step-bullet{background-color:#32e67f}.stepper-body{margin:25px auto;padding:1rem}.stepper-body .content:not(.active){height:0;overflow:hidden}.step{position:relative;width:33.33%}.step:after{content:\"\";position:absolute;width:100%;height:3px;background-color:#b3babe;top:50%;left:-50%;z-index:-1}.step:first-child:after{content:none}.step.completed+.step:after{background-color:#32e67f}"]
        })
    ], NgStepperComponent);
    return NgStepperComponent;
}(CdkStepper));
export { NgStepperComponent };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLW5nLXN0ZXBwZXIvIiwic291cmNlcyI6WyJsaWIvbmctc3RlcHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBQyxVQUFVLEVBQUUsc0JBQXNCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RSxPQUFPLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBQyxNQUFNLHFCQUFxQixDQUFDO1NBT2hDLEVBQUMsMkJBQTJCLEVBQUUsS0FBSyxFQUFDO0FBV25GO0lBQXdDLHNDQUFVO0lBQWxEOztJQVlBLENBQUM7MkJBWlksa0JBQWtCO0lBQzdCLHFDQUFRLEdBQVI7SUFDQSxDQUFDO0lBR0QsZ0RBQW1CLEdBQW5CLFVBQW9CLEtBQW9CO1FBQ3RDLElBQUksS0FBSyxDQUFDLEdBQUcsS0FBSyxXQUFXLEVBQUU7WUFDN0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ2pCO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLFlBQVksRUFBRTtZQUNyQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDYjtJQUNILENBQUM7O0lBTkQ7UUFEQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztpRUFPNUM7SUFYVSxrQkFBa0I7UUFoQjlCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxZQUFZO1lBQ3RCLHNpQ0FBMEM7WUFFMUMsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxvQkFBa0IsRUFBQyxFQUFFO29CQUNsRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxJQUFzQztpQkFDaEYsQ0FBQztZQUNGLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRTtvQkFDckMsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7b0JBQ3RFLEtBQUssQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztvQkFDakUsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7b0JBQ2pFLFVBQVUsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNoQyxVQUFVLENBQUMscUJBQXFCLEVBQUUsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7b0JBQ2xGLFVBQVUsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsc0NBQXNDLENBQUMsQ0FBQztpQkFDL0UsQ0FBQyxDQUFDOztTQUNKLENBQUM7T0FDVyxrQkFBa0IsQ0FZOUI7SUFBRCx5QkFBQztDQUFBLEFBWkQsQ0FBd0MsVUFBVSxHQVlqRDtTQVpZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBIb3N0TGlzdGVuZXIsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Nka1N0ZXBwZXIsIFNURVBQRVJfR0xPQkFMX09QVElPTlN9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zdGVwcGVyJztcbmltcG9ydCB7YW5pbWF0ZSwgc3RhdGUsIHN0eWxlLCB0cmFuc2l0aW9uLCB0cmlnZ2VyfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmctc3RlcHBlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9uZy1zdGVwcGVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbmctc3RlcHBlci5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogQ2RrU3RlcHBlciwgdXNlRXhpc3Rpbmc6IE5nU3RlcHBlckNvbXBvbmVudH0sIHtcbiAgICBwcm92aWRlOiBTVEVQUEVSX0dMT0JBTF9PUFRJT05TLCB1c2VWYWx1ZToge2Rpc3BsYXlEZWZhdWx0SW5kaWNhdG9yVHlwZTogZmFsc2V9XG4gIH1dLFxuICBhbmltYXRpb25zOiBbdHJpZ2dlcignc3RlcFRyYW5zaXRpb24nLCBbXG4gICAgc3RhdGUoJ3ByZXZpb3VzJywgc3R5bGUoe3RyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTEwMCUpJywgb3BhY2l0eTogMH0pKSxcbiAgICBzdGF0ZSgnY3VycmVudCcsIHN0eWxlKHt0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDApJywgb3BhY2l0eTogMX0pKSxcbiAgICBzdGF0ZSgnbmV4dCcsIHN0eWxlKHt0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDEwMCUpJywgb3BhY2l0eTogMH0pKSxcbiAgICB0cmFuc2l0aW9uKCc6ZW50ZXInLCBhbmltYXRlKDApKSxcbiAgICB0cmFuc2l0aW9uKCdwcmV2aW91cyA9PiBjdXJyZW50JywgYW5pbWF0ZSgnNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzUsIDAsIDAuMjUsIDEpJykpLFxuICAgIHRyYW5zaXRpb24oJ25leHQgPT4gY3VycmVudCcsIGFuaW1hdGUoJzUwMG1zIGN1YmljLWJlemllcigwLjM1LCAwLCAwLjI1LCAxKScpKSxcbiAgXSldXG59KVxuZXhwb3J0IGNsYXNzIE5nU3RlcHBlckNvbXBvbmVudCBleHRlbmRzIENka1N0ZXBwZXIgaW1wbGVtZW50cyBPbkluaXQge1xuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmtleWRvd24nLCBbJyRldmVudCddKVxuICBoYW5kbGVLZXlib2FyZEV2ZW50KGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ0Fycm93TGVmdCcpIHtcbiAgICAgIHRoaXMucHJldmlvdXMoKTtcbiAgICB9IGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gJ0Fycm93UmlnaHQnKSB7XG4gICAgICB0aGlzLm5leHQoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==